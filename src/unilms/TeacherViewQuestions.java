/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package unilms;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

    

/**
 *
 * @author tushar
 */
public class TeacherViewQuestions extends javax.swing.JFrame {

    /**
     * Creates new form TeacherViewQuestions
     */
    String tid = GlobalClass.loggedinteacher;
    String depart,tname;
    ImageIcon ic = new ImageIcon("src/Uni Lms.png");

    ArrayList<QuestionDetails> al4;
    mytablemodel4 tm4;
    

    public TeacherViewQuestions() {
        initComponents();
        try {
            HttpResponse<String> response = Unirest.get("http://localhost:8080/teachersetname").queryString("id", tid).asString();
            if (response.getStatus() == 200) {
                String anss = response.getBody();
//            System.out.println(anss);

                StringTokenizer st3 = new StringTokenizer(anss, ";;;");
                while (st3.hasMoreTokens()) {
                    
                    tname = st3.nextToken();
                    tname = tname.toUpperCase();
                    depart = st3.nextToken();

//              photo1 = st3.nextToken(); 
//             name.setText(tname+"!");
                    department.setText(depart);

                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        al4 = new ArrayList<>();
        tm4 = new mytablemodel4();
        fetchcourse();

        jTable1.setModel(tm4);
        setSize(1165, 800);
        setTitle("Uni LMS Student-Teacher Query Forum");
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        department = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        anstalb = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ccb = new javax.swing.JComboBox<>();
        semcb = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Select Semester");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(570, 120, 130, 20);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Select Course");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(100, 120, 130, 20);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Department of ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(440, 10, 220, 30);

        department.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        department.setForeground(new java.awt.Color(51, 51, 51));
        department.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        department.setText("CSE");
        jPanel1.add(department);
        department.setBounds(430, 50, 240, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 210, 1100, 360);

        anstalb.setBackground(new java.awt.Color(255, 255, 255));
        anstalb.setColumns(20);
        anstalb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        anstalb.setRows(5);
        jScrollPane2.setViewportView(anstalb);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(210, 620, 560, 110);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Post Answer");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(210, 590, 130, 30);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unilms/note (1).png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(800, 620, 110, 110);

        ccb.setBackground(new java.awt.Color(255, 255, 255));
        ccb.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ccb.setForeground(new java.awt.Color(51, 51, 51));
        ccb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department" }));
        ccb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ccbItemStateChanged(evt);
            }
        });
        jPanel1.add(ccb);
        ccb.setBounds(100, 150, 380, 40);

        semcb.setBackground(new java.awt.Color(255, 255, 255));
        semcb.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        semcb.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(semcb);
        semcb.setBounds(570, 150, 380, 40);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unilms/icons8-view-48.png"))); // NOI18N
        jButton2.setToolTipText("");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(970, 130, 54, 50);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Show");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(967, 180, 60, 17);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unilms/Uni Lms.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(860, 0, 290, 100);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unilms/back.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(0, 0, 50, 50);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Back");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 50, 50, 16);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1150, 760);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadQuestions() {
        try {
            String course = ccb.getSelectedItem().toString();
            String dept = department.getText();
            String sem = semcb.getSelectedItem().toString();
            HttpResponse<String> response = Unirest.get("http://localhost:8080/loadquestion")
                    .queryString("depart", dept)
                    .queryString("course", course)
                    .queryString("sem", sem)
                    .asString();

            String ans = response.getBody();
            System.out.println("questions------- " + ans);
            StringTokenizer st = new StringTokenizer(ans, "$$");
            al4.clear();
            while (st.hasMoreTokens()) {
                String vnotes = st.nextToken();
                StringTokenizer st2 = new StringTokenizer(vnotes, ";;;");
                String chatid = st2.nextToken();
                String sid = st2.nextToken();
                String sname = st2.nextToken();
                String question = st2.nextToken();

                al4.add(new QuestionDetails(chatid, sid, sname, question, false));

            }
            tm4.fireTableDataChanged();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    class mytablemodel4 extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return al4.size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        public String getColumnName(int j) {
            String c[] = {"Student Name", "Question", "Status"};
            return c[j];
        }

        @Override
        public Object getValueAt(int i, int j) {

            if (j == 0) {
                return al4.get(i).sname;
            } else if (j == 1) {
                return al4.get(i).question;
            } else {
                return al4.get(i).status;
            }

        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            switch (columnIndex) {
                case 0:
                    return String.class;
                case 1:
                    return String.class;
                case 2:
                    return Boolean.class;
                default:
                    return null;
            }
        }
        
        @Override
        public boolean isCellEditable(int rowIndex, int col) {
            return col == 2;
        }
        
        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            if (columnIndex == 2) {
                if (aValue instanceof Boolean) {
                    al4.get(rowIndex).status = (Boolean) aValue;
                    fireTableCellUpdated(rowIndex, columnIndex);
                }
            }
        }
        
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            
            String ans = anstalb.getText();
            
            int count = 0;
            String chatid = "";
            for (int i = 0; i <= jTable1.getRowCount() - 1; i++) {
                if (jTable1.getModel().getValueAt(i, 2).toString().equals("true")) {
                    chatid = al4.get(i).chatid + "";
                    count++;
                }
            }
            
            if(count>1)
            {
                 JOptionPane.showMessageDialog(this, """
                                                                Multiple Rows Selected
                                                                !!! Try Again !!!""", "Uni LMS Teacher-Student Forums", JOptionPane.PLAIN_MESSAGE, ic);
            }
            else if(count==0)
            {
                JOptionPane.showMessageDialog(this, """
                                                                No Rows Selected
                                                                !!! Try Again !!!""", "Uni LMS Teacher-Student Forums", JOptionPane.PLAIN_MESSAGE, ic);
            }
            else
            {
                HttpResponse<String> response = Unirest.get("http://localhost:8080/teachersendans")
                    
                    .queryString("ans", ans)
                    .queryString("chatid",chatid)
                    .queryString("teachername",tname)
                    .queryString("tid",tid)
                    .asString();
                
                String feedback = response.getBody();
                if(feedback.equals("Answer Published !!"))
                {
                    JOptionPane.showMessageDialog(this, """
                                                                Answer Published
                                                                !!!!!!!!!!!!!!!!!""", "Uni LMS Teacher-Student Forums", JOptionPane.PLAIN_MESSAGE, ic); 
                }
                else
                {
                     JOptionPane.showMessageDialog(this, """
                                                                Error Occured
                                                                !!!!!!!!!!!!!!""", "Uni LMS Teacher-Student Forums", JOptionPane.PLAIN_MESSAGE, ic);
                }
                
            }
            
            
            
            
            
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ccbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ccbItemStateChanged
        // TODO add your handling code
        fetchsemester();
    }//GEN-LAST:event_ccbItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        loadQuestions();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void fetchcourse() {
        System.out.println("Hello im function");
        new Thread(new Runnable() {
            @Override
            public void run() {

                String depart = department.getText();
                try {
                    ccb.removeAllItems();

                    HttpResponse<String> response = Unirest.get("http://localhost:8080/getcourse").queryString("depart", depart).asString();

                    //  System.out.println(ans4);
                    if (response.getStatus() == 200) {
                        ccb.removeAllItems();
                        String ans4 = response.getBody();

                        StringTokenizer st4 = new StringTokenizer(ans4, "#$#");
                        while (st4.hasMoreTokens()) {

                            ccb.addItem(st4.nextToken());
                        }

                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            }
        }).start();
    }

    private void fetchsemester() {
        System.out.println("called");
        new Thread(new Runnable() {
            @Override
            public void run() {
                String course = ccb.getSelectedItem().toString();
                System.out.println("course---" + course);
                String de = department.getText();
                try {
                    HttpResponse<String> response = Unirest.get("http://localhost:8080/getsemester").queryString("course", course).queryString("de", de).asString();
                    if (response.getStatus() == 200) {
                        semcb.removeAllItems();
                        String ans5 = response.getBody();

                        StringTokenizer st5 = new StringTokenizer(ans5, "#$#$");
                        while (st5.hasMoreTokens()) {

                            semcb.addItem(st5.nextToken());
                        }

                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            }
        }).start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherViewQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherViewQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherViewQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherViewQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherViewQuestions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea anstalb;
    private javax.swing.JComboBox<String> ccb;
    private javax.swing.JLabel department;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> semcb;
    // End of variables declaration//GEN-END:variables
}
